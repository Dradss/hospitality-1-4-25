from alembic import op
import sqlalchemy as sa
from sqlalchemy import inspect

# revision identifiers, used by Alembic.
revision = 'be4fa58c3301'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    # Safely drop the constraint if it exists
    conn = op.get_bind()
    inspector = inspect(conn)
    constraints = [c['name'] for c in inspector.get_unique_constraints('managers')]

    if 'managers_passcode_key' in constraints:
        with op.batch_alter_table('managers', schema=None) as batch_op:
            batch_op.drop_constraint('managers_passcode_key', type_='unique')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('managers', schema=None) as batch_op:
        batch_op.create_unique_constraint('managers_passcode_key', ['passcode'])
    # ### end Alembic commands ###
